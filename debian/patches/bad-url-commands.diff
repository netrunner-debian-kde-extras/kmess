From dcfbfdae846f9103fd7bd3acffec70ab729898bc Mon Sep 17 00:00:00 2001
From: Adam Goossens <fontknocker@kmess.org>
Date: Thu, 13 Jan 2011 23:22:42 +1100
Subject: [PATCH] Fix bug where KMess could not login due to badly formed URL
 commands.

The fix for URL COMPOSE is...creative? But it will work. PROFILE requests
must have the language code in hexadecimal as the last parameter.
---
 ChangeLog                                 |    3 +++
 src/network/msnnotificationconnection.cpp |    8 ++------
 src/utils/kmessshared.cpp                 |   10 ++++------
 3 files changed, 9 insertions(+), 12 deletions(-)

diff --git a/src/network/msnnotificationconnection.cpp b/src/network/msnnotificationconnection.cpp
index a446e79..fc8c6c1 100644
--- a/src/network/msnnotificationconnection.cpp
+++ b/src/network/msnnotificationconnection.cpp
@@ -1029,16 +1029,12 @@ void MsnNotificationConnection::goOnline()
     hash.insert( QString::number(ack), "INBOX" );
 
     // Ask for compose URL
-    ack = sendCommand("URL", "COMPOSE");
+    ack = sendCommand("URL", "COMPOSE some.invalid@kmess.email" );
     hash.insert( QString::number(ack), "COMPOSE" );
 
     // Ask the personal profile URL
-    ack = sendCommand("URL", "PROFILE");
+    ack = sendCommand("URL", "PROFILE 0x" + QString::number( CurrentAccount::instance()->getLanguageCode().toInt(), 8 ) );
     hash.insert( QString::number(ack), "PROFILE" );
-
-    // Ask the URL for change account info
-    ack = sendCommand("URL", "PERSON");
-    hash.insert( QString::number(ack), "PERSON" );
   }
 
   // Notify observers that the server is connected
diff --git a/src/utils/kmessshared.cpp b/src/utils/kmessshared.cpp
index 1c8e29e..b508b59 100644
--- a/src/utils/kmessshared.cpp
+++ b/src/utils/kmessshared.cpp
@@ -139,13 +139,11 @@ QString KMessShared::createRequestFile( const QString &mailto, const QString &fo
     return QString();
   }
 
+  // this will have our (urlencoded) dodgy email address we used to satisfy URL COMPOSE
+  // at the initial login. replace it where we actually want it to go.
   QString command( folder );
-
-  // Check if the user wants to send an email
-  if( ! mailto.isEmpty() )
-  {
-    command += "?mailto=1&to=" + mailto;
-  }
+  
+  command = command.replace( "some.invalid%40kmess.email", mailto );
 
   // Use the method into passport to compute the token
   QString token( PassportLoginService::createHotmailToken( currentAccount->getToken( "Passport" ),
-- 
1.7.9

